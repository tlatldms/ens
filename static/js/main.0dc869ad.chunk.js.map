{"version":3,"sources":["pages/Main.js","pages/Detail.js","client/Root.js","serviceWorker.js","index.js"],"names":["MyContract","window","web3","eth","contract","constant","inputs","name","type","outputs","payable","stateMutability","Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","value","getContractOwner","owner","state","ContractInstance","err","addr","contractOwner","destructed","handleRegister","preventDefault","register","registerAddr","registerName","gas","from","accounts","toWei","result","console","log","handleChangeAddress","changeAddr","changingName","changingAddress","transferNameOwner","nameToBeChanged","newOwner","getGotAddress","toShowAddr","gotAddress","getAddr","event","getGotName","toShowName","gotName","getName","getGotNameHolder","nowNameHolder","gotNameHolder","getNameHolder","withdrawl","withdraw","withdrawlAmount","destruct","selfDestruct","viewNewContract","at","newContract","nextProps","nextState","_this2","interval","setInterval","react_default","a","createElement","placeholder","onChange","onClick","onSubmit","Component","Detail","react_router","exact","path","component","Root","react_router_dom","basename","pages_Detail","Boolean","location","hostname","match","ReactDOM","render","client_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0dc869ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\nconst MyContract = window.web3.eth.contract(\r\n    [\r\n        {\r\n            \"constant\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"name\": \"name\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferNameOwner\",\r\n            \"outputs\": [],\r\n            \"payable\": true,\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": true,\r\n            \"inputs\": [],\r\n            \"name\": \"nowNameHolder\",\r\n            \"outputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"payable\": false,\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"name\": \"name\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"name\": \"toAddr\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"changeAddr\",\r\n            \"outputs\": [],\r\n            \"payable\": true,\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"name\": \"amount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"withdraw\",\r\n            \"outputs\": [],\r\n            \"payable\": false,\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"name\": \"toregister\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"name\": \"name\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"register\",\r\n            \"outputs\": [],\r\n            \"payable\": true,\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"name\": \"name\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"getNameHolder\",\r\n            \"outputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"payable\": true,\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": true,\r\n            \"inputs\": [],\r\n            \"name\": \"toShowName\",\r\n            \"outputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"payable\": false,\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": true,\r\n            \"inputs\": [],\r\n            \"name\": \"toShowAddr\",\r\n            \"outputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"payable\": false,\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"name\": \"addr\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"getName\",\r\n            \"outputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"payable\": true,\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": true,\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"payable\": false,\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": true,\r\n            \"inputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"addrToName\",\r\n            \"outputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"payable\": false,\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": false,\r\n            \"inputs\": [],\r\n            \"name\": \"selfDestruct\",\r\n            \"outputs\": [],\r\n            \"payable\": false,\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"constant\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"name\": \"name\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"getAddr\",\r\n            \"outputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"payable\": true,\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"payable\": false,\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"payable\": true,\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"fallback\"\r\n        }\r\n    ]    \r\n);\r\nclass Main extends Component {\r\n\r\n    constructor (props) {\r\n        super (props);\r\n\r\n        this.state = {\r\n            ContractInstance: MyContract.at('0xe062497074d242fc99eb9a33481f36f34f47b138'),\r\n            destructed: false\r\n        };         \r\n    }\r\n\r\n\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return true;\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value,\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        this.interval = setInterval(() => {\r\n            this.getGotAddress();\r\n            this.getGotNameHolder();\r\n            this.getGotName();\r\n            this.getContractOwner();\r\n          }, 1000);\r\n    }\r\n\r\n    getContractOwner = () => {\r\n        const { owner } = this.state.ContractInstance;\r\n        owner((err,addr) => {\r\n            this.setState({\r\n                contractOwner: addr,\r\n            })\r\n            if (addr == \"0x\") {\r\n                this.setState({\r\n                    destructed : true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleRegister = (e) => {\r\n        e.preventDefault();\r\n        const { register } = this.state.ContractInstance;\r\n        register(\r\n            this.state.registerAddr,\r\n            this.state.registerName,\r\n            {\r\n                gas: 300000,\r\n                from: window.web3.eth.accounts[0],\r\n                value: window.web3.toWei(0.1,'ether')\r\n            }, (err, result) => {\r\n                console.log('changing');\r\n            }\r\n        )\r\n    }\r\n\r\n    handleChangeAddress = (e) => {\r\n        e.preventDefault();\r\n        const { changeAddr } = this.state.ContractInstance;\r\n        changeAddr(\r\n            this.state.changingName,\r\n            this.state.changingAddress,\r\n            {\r\n                gas: 300000,\r\n                from: window.web3.eth.accounts[0],\r\n                value: window.web3.toWei(0.1,'ether')\r\n            }, (err, result) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    transferNameOwner = (e) => {\r\n        e.preventDefault();\r\n        const { transferNameOwner } = this.state.ContractInstance;\r\n        transferNameOwner(\r\n            this.state.nameToBeChanged,\r\n            this.state.newOwner,\r\n            {\r\n                gas: 300000,\r\n                from: window.web3.eth.accounts[0],\r\n                value: window.web3.toWei(0.1,'ether')\r\n            }, (err, result) => {\r\n            }\r\n        )       \r\n    }\r\n\r\n    getGotAddress = () => {\r\n        const { toShowAddr } = this.state.ContractInstance;\r\n        toShowAddr ((err,addr) => {\r\n            this.setState({\r\n                gotAddress: addr,\r\n            })\r\n        })\r\n    }\r\n\r\n    getAddr = (e) => {\r\n        e.preventDefault();\r\n        const { getAddr } = this.state.ContractInstance;\r\n        getAddr(\r\n            this.state.getAddr,\r\n            {\r\n                gas: 300000,\r\n                from: window.web3.eth.accounts[0],\r\n                value: window.web3.toWei(0.01,'ether')\r\n            }, (err, event) => {\r\n            }\r\n        )\r\n    }\r\n    getGotName = () => {\r\n        const { toShowName } = this.state.ContractInstance;\r\n        toShowName ((err,name) => {\r\n            this.setState({\r\n                gotName: name,\r\n            })\r\n        })\r\n    }\r\n\r\n    getName = (e) => {\r\n        e.preventDefault();\r\n        const { getName } = this.state.ContractInstance;\r\n        getName(\r\n            this.state.getName,\r\n            {\r\n                gas: 300000,\r\n                from: window.web3.eth.accounts[0],\r\n                value: window.web3.toWei(0.01,'ether')\r\n            }, (err, event) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    getGotNameHolder = () => {\r\n        const { nowNameHolder } = this.state.ContractInstance;\r\n        nowNameHolder ((err,name) => {\r\n            this.setState({\r\n                gotNameHolder: name,\r\n            })\r\n        })\r\n    }\r\n\r\n    getNameHolder = (e) => {\r\n        e.preventDefault();\r\n        const { getNameHolder } = this.state.ContractInstance;\r\n        getNameHolder(\r\n            this.state.getNameHolder,\r\n            {\r\n                gas: 300000,\r\n                from: window.web3.eth.accounts[0],\r\n                value: window.web3.toWei(0, 'ether')\r\n            }, (err, event) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    withdrawl = (e) => {\r\n        e.preventDefault();\r\n        const { withdraw } = this.state.ContractInstance;\r\n        withdraw(\r\n            this.state.withdrawlAmount,\r\n            {\r\n                gas: 300000,\r\n                from: window.web3.eth.accounts[0],\r\n                value: window.web3.toWei(0,'ether')\r\n            }, (err, event) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    destruct = (e) => {\r\n        e.preventDefault();\r\n        const { selfDestruct } = this.state.ContractInstance;\r\n        selfDestruct(\r\n            {\r\n                gas: 300000,\r\n                from: window.web3.eth.accounts[0],\r\n                value: window.web3.toWei(0,'ether')\r\n            }, (err, event) => {\r\n            }\r\n        )\r\n        this.setState({\r\n            destructed:true\r\n        })\r\n    }\r\n\r\nviewNewContract = (e) => {\r\n    this.setState({\r\n        ContractInstance: MyContract.at(this.state.newContract),\r\n        destructed: false\r\n    })\r\n}\r\n\r\n    render() {  \r\n        return (\r\n            <div>\r\n                 <input\r\n                            type=\"text\"\r\n                            name=\"newContract\"\r\n                            placeholder=\"새 Contract 주소\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    <button onClick = {this.viewNewContract}>새 컨트랙트 보기</button><br/>\r\n                    <br/><hr/><br/>\r\n                { this.state.destructed ?\r\n                    <div>\r\n                    파기됐거나 파기될 예정인 컨트랙트임<br/>\r\n                    컨트랙트의 주인이 파기한게아니면 파기되지 않았을것<br/><br/><br/>\r\n                   \r\n                    </div>  : \r\n                <div>\r\n                    이 Contract의 주인 :&nbsp;\r\n                    {this.state.contractOwner} <br/>\r\n    <br/>\r\n                    <form onSubmit={this.handleRegister}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"registerAddr\"\r\n                            placeholder=\"등록할 주소\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"registerName\"\r\n                            placeholder=\"등록할 도메인\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button type=\"submit\">Register</button>\r\n                    </form>\r\n\r\n                    <br/>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"getAddr\"\r\n                        placeholder=\"도메인(주소를 반환)\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button onClick={this.getAddr}>주소 찾기 시작</button><br />\r\n\r\n                    이 도메인의 주소: {this.state.gotAddress}\r\n\r\n                    <br/><br/>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"getName\"\r\n                        placeholder=\"주소(도메인을 반환)\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button onClick={this.getName}>도메인 찾기 시작</button><br />\r\n                   \r\n                    이 주소의 도메인: {this.state.gotName}\r\n                    <br /><br/>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"getNameHolder\"\r\n                        placeholder=\"도메인(도메인의 주인의 주소를 반환)\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button onClick={this.getNameHolder}>도메인 주인 찾기 시작</button><br />\r\n                \r\n        \r\n                    이 도메인의 주인: {this.state.gotNameHolder}\r\n                    <br/><br/>\r\n\r\n                    <form onSubmit={this.handleChangeAddress}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"changingName\"\r\n                            placeholder=\"주소를 바꿀 도메인\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"changingAddress\"\r\n                            placeholder=\"이 주소로 변경\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button type=\"submit\">변경하기</button>\r\n                    </form>\r\n\r\n                    <br/>\r\n\r\n                    <form onSubmit={this.transferNameOwner}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nameToBeChanged\"\r\n                            placeholder=\"주인을 바꿀 도메인\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"newOwner\"\r\n                            placeholder=\"주인을 이 주소로 변경\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button type=\"submit\">도메인 주인 변경하기</button>\r\n                    </form>\r\n                \r\n                    <br/>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"withdrawlAmount\"\r\n                        placeholder=\"출금할 금액(wei)\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button onClick={this.withdrawl}>출금하기</button>\r\n                    <br/><br/>\r\n\r\n                    <button onClick={this.destruct}>selfDestruct</button>\r\n                    <br/><br/>    \r\n                </div>\r\n                }\r\n               <hr /> \r\n                주소, 도메인, 도메인주인은 1초에 한번씩 자동으로 새로고침 <br/>\r\n                시작 버튼을 누르기 전에 나오는 값은 상관없음(이전에 확인했던게 public변수에 저장되어있는것) <br />\r\n\r\n                destructd 창에서 새 컨트랙트 보기를 해도 새로고침하면<br/>\r\n                코드의 원본 주소 컨트랙트로 돌아감\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Main from './Main';\r\n\r\nconst Detail = () => {\r\n    return (\r\n        <div>\r\n            <Route exact path='/' component={Main} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Detail;","import React from 'react';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport App from 'pages/Detail';\r\n\r\nconst Root = () => {\r\n    return (\r\n        <BrowserRouter\r\n        basename=\"/ens\">\r\n            <App/>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './client/Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}